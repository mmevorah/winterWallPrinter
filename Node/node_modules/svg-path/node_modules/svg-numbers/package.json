{
  "name": "svg-numbers",
  "version": "0.1.1",
  "description": "Parse SVG coordinates.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "devDependencies": {
    "tape": "~2.3.0",
    "coverjs": "0.0.14"
  },
  "scripts": {
    "test": "tape test/*.js",
    "cover": "script/cover.sh"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": {
      "chrome": [
        27,
        31
      ],
      "firefox": [
        3.6,
        10,
        17,
        25
      ],
      "ie": [
        8,
        9,
        10
      ],
      "safari": [
        5.1,
        6
      ],
      "opera": [
        10,
        15,
        17
      ],
      "iphone": "latest",
      "ipad": "latest",
      "android": "latest"
    }
  },
  "author": {
    "name": "Peter-Paul van Gemerden",
    "email": "mail@ppvg.nl"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/PPvG/svg-numbers.git"
  },
  "bugs": {
    "url": "https://github.com/PPvG/svg-numbers/issues"
  },
  "homepage": "https://github.com/PPvG/svg-numbers",
  "keywords": [
    "svg",
    "number",
    "numbers",
    "points",
    "coordinates",
    "parser",
    "parse",
    "serializer",
    "serialize"
  ],
  "readme": "# svg-numbers\n\nParser and serializer for lists of coordinates in SVG documents, such as [the `points` attribute of a `<polyline>` element](http://www.w3.org/TR/SVG/shapes.html#PointsBNF).\n\n[![NPM version](https://badge.fury.io/js/svg-numbers.png)](http://badge.fury.io/js/svg-numbers) [![Build status](https://travis-ci.org/PPvG/svg-numbers.png?branch=master)](https://travis-ci.org/PPvG/svg-numbers)\n\n## Installation\n\nWith [npm](https://npmjs.org/): `$ npm install svg-numbers`\n\n## Usage\n\n### Parsing\n\n    var parse = require('svg-numbers').parse\n\n    var numbers = parse('10, 15.20.8 -11,15-25+75 4.2e3')\n    console.log(numbers)\n    // [ 10, 15.2, .8, -11, 15, -25, 75, 4200 ]\n\n### Serializing\n\n    var serialize = require('svg-numbers').serialize\n\n    var numbers = [10, 4.2, .333, -8]\n    var str = serialize(numbers)\n    console.log(str)\n    // '10,4.2.333-8'\n\nSeparators (commas and/or spaces) are left out wherever the SVG recommendation allows it. If you'd rather have separators everywhere, just use `Array.prototype.join`:\n\n    var str = numbers.join(', ')\n    console.log(str)\n    // '10, 4.2, .333, -8'\n\n### Catching syntax errors\n\nIf a syntax error is found, an error is thrown. The valid coordinates up to and until the syntax error are available as `error.partial`:\n\n    try {\n      var numbers = parse('10, 20, , 30, 40')\n    } catch (error) {\n      console.log(error.partial)\n      // [ 10, 20 ]\n    }\n\n(The W3C SVG recommendation has something to say about [error processing](http://www.w3.org/TR/SVG/implnote.html#ErrorProcessing).)\n\n## Running the tests\n\n    $ git clone https://github.com/PPvG/svg-numbers\n\n    $ cd svg-numbers\n\n    $ npm install\n\n    $ npm test\n\n## Browser support\n\nUse [browserify](http://browserify.org/). All major browsers are supported:\n\n[![Browser support](https://ci.testling.com/PPvG/svg-numbers.png)](https://ci.testling.com/PPvG/svg-numbers)\n\n## License\n\n[MIT](https://raw.github.com/PPvG/svg-numbers/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "_id": "svg-numbers@0.1.1",
  "dist": {
    "shasum": "1345718be10765ba0782ec18e5294993be23a4d1",
    "tarball": "http://registry.npmjs.org/svg-numbers/-/svg-numbers-0.1.1.tgz"
  },
  "_from": "svg-numbers@~0.1.1",
  "_npmVersion": "1.3.14",
  "_npmUser": {
    "name": "ppvg",
    "email": "info@ppvg.nl"
  },
  "maintainers": [
    {
      "name": "ppvg",
      "email": "info@ppvg.nl"
    }
  ],
  "_shasum": "1345718be10765ba0782ec18e5294993be23a4d1",
  "_resolved": "https://registry.npmjs.org/svg-numbers/-/svg-numbers-0.1.1.tgz"
}
